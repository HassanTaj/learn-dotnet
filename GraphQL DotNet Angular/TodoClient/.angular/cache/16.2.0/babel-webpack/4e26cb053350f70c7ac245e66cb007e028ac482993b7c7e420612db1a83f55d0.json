{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { visit } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { getFragmentDefinitions } from \"../../utilities/index.js\";\nexport function createFragmentRegistry() {\n  var fragments = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    fragments[_i] = arguments[_i];\n  }\n  return new (FragmentRegistry.bind.apply(FragmentRegistry, __spreadArray([void 0], fragments, false)))();\n}\nvar arrayLikeForEach = Array.prototype.forEach;\nvar FragmentRegistry = function () {\n  function FragmentRegistry() {\n    var fragments = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fragments[_i] = arguments[_i];\n    }\n    this.registry = Object.create(null);\n    this.resetCaches();\n    if (fragments.length) {\n      this.register.apply(this, fragments);\n    }\n  }\n  FragmentRegistry.prototype.register = function () {\n    var _this = this;\n    var definitions = new Map();\n    arrayLikeForEach.call(arguments, function (doc) {\n      getFragmentDefinitions(doc).forEach(function (node) {\n        definitions.set(node.name.value, node);\n      });\n    });\n    definitions.forEach(function (node, name) {\n      if (node !== _this.registry[name]) {\n        _this.registry[name] = node;\n        _this.invalidate(name);\n      }\n    });\n    return this;\n  };\n  FragmentRegistry.prototype.invalidate = function (name) {};\n  FragmentRegistry.prototype.resetCaches = function () {\n    this.invalidate = (this.lookup = this.cacheUnaryMethod(\"lookup\")).dirty;\n    this.transform = this.cacheUnaryMethod(\"transform\");\n    this.findFragmentSpreads = this.cacheUnaryMethod(\"findFragmentSpreads\");\n  };\n  FragmentRegistry.prototype.cacheUnaryMethod = function (name) {\n    var registry = this;\n    var originalMethod = FragmentRegistry.prototype[name];\n    return wrap(function () {\n      return originalMethod.apply(registry, arguments);\n    }, {\n      makeCacheKey: function (arg) {\n        return arg;\n      }\n    });\n  };\n  FragmentRegistry.prototype.lookup = function (fragmentName) {\n    return this.registry[fragmentName] || null;\n  };\n  FragmentRegistry.prototype.transform = function (document) {\n    var _this = this;\n    var defined = new Map();\n    getFragmentDefinitions(document).forEach(function (def) {\n      defined.set(def.name.value, def);\n    });\n    var unbound = new Set();\n    var enqueue = function (spreadName) {\n      if (!defined.has(spreadName)) {\n        unbound.add(spreadName);\n      }\n    };\n    var enqueueChildSpreads = function (node) {\n      return Object.keys(_this.findFragmentSpreads(node)).forEach(enqueue);\n    };\n    enqueueChildSpreads(document);\n    var missing = [];\n    var map = Object.create(null);\n    unbound.forEach(function (fragmentName) {\n      var knownFragmentDef = defined.get(fragmentName);\n      if (knownFragmentDef) {\n        enqueueChildSpreads(map[fragmentName] = knownFragmentDef);\n      } else {\n        missing.push(fragmentName);\n        var def = _this.lookup(fragmentName);\n        if (def) {\n          enqueueChildSpreads(map[fragmentName] = def);\n        }\n      }\n    });\n    if (missing.length) {\n      var defsToAppend_1 = [];\n      missing.forEach(function (name) {\n        var def = map[name];\n        if (def) {\n          defsToAppend_1.push(def);\n        }\n      });\n      if (defsToAppend_1.length) {\n        document = __assign(__assign({}, document), {\n          definitions: document.definitions.concat(defsToAppend_1)\n        });\n      }\n    }\n    return document;\n  };\n  FragmentRegistry.prototype.findFragmentSpreads = function (root) {\n    var spreads = Object.create(null);\n    visit(root, {\n      FragmentSpread: function (node) {\n        spreads[node.name.value] = node;\n      }\n    });\n    return spreads;\n  };\n  return FragmentRegistry;\n}();","map":{"version":3,"names":["__assign","__spreadArray","visit","wrap","getFragmentDefinitions","createFragmentRegistry","fragments","_i","arguments","length","FragmentRegistry","bind","apply","arrayLikeForEach","Array","prototype","forEach","registry","Object","create","resetCaches","register","_this","definitions","Map","call","doc","node","set","name","value","invalidate","lookup","cacheUnaryMethod","dirty","transform","findFragmentSpreads","originalMethod","makeCacheKey","arg","fragmentName","document","defined","def","unbound","Set","enqueue","spreadName","has","add","enqueueChildSpreads","keys","missing","map","knownFragmentDef","get","push","defsToAppend_1","concat","root","spreads","FragmentSpread"],"sources":["D:/Repos/learn-dotnet/GraphQL_Angular_Subscriptions_V7_6_0/TodoClient/node_modules/@apollo/client/cache/inmemory/fragmentRegistry.js"],"sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport { visit, } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { getFragmentDefinitions } from \"../../utilities/index.js\";\nexport function createFragmentRegistry() {\n    var fragments = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fragments[_i] = arguments[_i];\n    }\n    return new (FragmentRegistry.bind.apply(FragmentRegistry, __spreadArray([void 0], fragments, false)))();\n}\nvar arrayLikeForEach = Array.prototype.forEach;\nvar FragmentRegistry = (function () {\n    function FragmentRegistry() {\n        var fragments = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fragments[_i] = arguments[_i];\n        }\n        this.registry = Object.create(null);\n        this.resetCaches();\n        if (fragments.length) {\n            this.register.apply(this, fragments);\n        }\n    }\n    FragmentRegistry.prototype.register = function () {\n        var _this = this;\n        var definitions = new Map();\n        arrayLikeForEach.call(arguments, function (doc) {\n            getFragmentDefinitions(doc).forEach(function (node) {\n                definitions.set(node.name.value, node);\n            });\n        });\n        definitions.forEach(function (node, name) {\n            if (node !== _this.registry[name]) {\n                _this.registry[name] = node;\n                _this.invalidate(name);\n            }\n        });\n        return this;\n    };\n    FragmentRegistry.prototype.invalidate = function (name) { };\n    FragmentRegistry.prototype.resetCaches = function () {\n        this.invalidate = (this.lookup = this.cacheUnaryMethod(\"lookup\")).dirty;\n        this.transform = this.cacheUnaryMethod(\"transform\");\n        this.findFragmentSpreads = this.cacheUnaryMethod(\"findFragmentSpreads\");\n    };\n    FragmentRegistry.prototype.cacheUnaryMethod = function (name) {\n        var registry = this;\n        var originalMethod = FragmentRegistry.prototype[name];\n        return wrap(function () {\n            return originalMethod.apply(registry, arguments);\n        }, {\n            makeCacheKey: function (arg) { return arg; },\n        });\n    };\n    FragmentRegistry.prototype.lookup = function (fragmentName) {\n        return this.registry[fragmentName] || null;\n    };\n    FragmentRegistry.prototype.transform = function (document) {\n        var _this = this;\n        var defined = new Map();\n        getFragmentDefinitions(document).forEach(function (def) {\n            defined.set(def.name.value, def);\n        });\n        var unbound = new Set();\n        var enqueue = function (spreadName) {\n            if (!defined.has(spreadName)) {\n                unbound.add(spreadName);\n            }\n        };\n        var enqueueChildSpreads = function (node) { return Object.keys(_this.findFragmentSpreads(node)).forEach(enqueue); };\n        enqueueChildSpreads(document);\n        var missing = [];\n        var map = Object.create(null);\n        unbound.forEach(function (fragmentName) {\n            var knownFragmentDef = defined.get(fragmentName);\n            if (knownFragmentDef) {\n                enqueueChildSpreads(map[fragmentName] = knownFragmentDef);\n            }\n            else {\n                missing.push(fragmentName);\n                var def = _this.lookup(fragmentName);\n                if (def) {\n                    enqueueChildSpreads(map[fragmentName] = def);\n                }\n            }\n        });\n        if (missing.length) {\n            var defsToAppend_1 = [];\n            missing.forEach(function (name) {\n                var def = map[name];\n                if (def) {\n                    defsToAppend_1.push(def);\n                }\n            });\n            if (defsToAppend_1.length) {\n                document = __assign(__assign({}, document), { definitions: document.definitions.concat(defsToAppend_1) });\n            }\n        }\n        return document;\n    };\n    FragmentRegistry.prototype.findFragmentSpreads = function (root) {\n        var spreads = Object.create(null);\n        visit(root, {\n            FragmentSpread: function (node) {\n                spreads[node.name.value] = node;\n            },\n        });\n        return spreads;\n    };\n    return FragmentRegistry;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}