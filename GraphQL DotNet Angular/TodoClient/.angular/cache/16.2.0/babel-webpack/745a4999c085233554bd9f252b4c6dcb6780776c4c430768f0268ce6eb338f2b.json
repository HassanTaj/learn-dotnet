{"ast":null,"code":"var _class;\nimport { gql } from 'apollo-angular';\nimport { Todo } from 'src/models/todo.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nfunction TodosComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 16)(1, \"td\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r4.task);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 3, t_r4.createdOn, \"dd-MMM-YYYY\"));\n  }\n}\nfunction TodosComponent_li_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" This Field is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class TodosComponent {\n  constructor(apollo) {\n    this.apollo = apollo;\n    this.model = new Todo();\n    this.todos = [];\n    this.apollo.subscribe({\n      query: gql`subscription todos {\n        todos {\n          id\n          task\n          createdOn\n        }\n      }`\n    }).subscribe({\n      next: result => {\n        this.todos = [];\n        this.todos.push(result.data.todos);\n      },\n      error: err => {},\n      complete: () => {}\n    });\n    // this.apollo.query({\n    //   query: gql`query getTodos{\n    //     todos {\n    //       id\n    //       task\n    //       createdOn\n    //     }\n    //   }`\n    // }).subscribe((observer: any) => {\n    //   this.todos = observer.data.todos;\n    // });\n  }\n\n  onSubmit(submit) {\n    this.apollo.mutate({\n      mutation: gql`mutation saveTodo($todo:TodoInput!){\n        save(inp:$todo) {\n          id\n          task\n        }\n      }`,\n      variables: {\n        todo: {\n          id: this.model.id ?? 0,\n          task: this.model.task\n        }\n      }\n    }).subscribe(observer => {\n      console.log(observer);\n      console.log(observer.data);\n      this.model = new Todo();\n      this.form?.reset();\n    });\n  }\n}\n_class = TodosComponent;\n_class.ɵfac = function TodosComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Apollo));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-todos\"]],\n  viewQuery: function TodosComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n    }\n  },\n  decls: 29,\n  vars: 6,\n  consts: [[1, \"card\", \"bg-dark\", \"h-100vh\"], [1, \"card-body\"], [1, \"card-title\", \"text-white\"], [1, \"table-responsive\"], [1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [\"class\", \"\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"col\"], [1, \"input-group\", \"has-validation\", \"mb-3\"], [\"name\", \"task\", \"id\", \"task\", \"type\", \"text\", \"placeholder\", \"Enter a task\", \"required\", \"true\", 1, \"form-control\", \"bg-dark\", \"text-white\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"taskInp\", \"ngModel\"], [\"type\", \"submit\", \"id\", \"\", 1, \"btn\", \"btn-outline-primary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"\"], [\"scope\", \"row\"]],\n  template: function TodosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n      i0.ɵɵtext(3, \"Todos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"table\", 4)(6, \"thead\")(7, \"tr\")(8, \"th\", 5);\n      i0.ɵɵtext(9, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 5);\n      i0.ɵɵtext(11, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 5);\n      i0.ɵɵtext(13, \"Created On\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 5);\n      i0.ɵɵtext(15, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, TodosComponent_tr_17_Template, 9, 6, \"tr\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"form\", 7, 8);\n      i0.ɵɵlistener(\"ngSubmit\", function TodosComponent_Template_form_ngSubmit_18_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementStart(20, \"div\", 9)(21, \"div\", 10)(22, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TodosComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.model.task = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 13);\n      i0.ɵɵtext(25, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 14)(27, \"ul\");\n      i0.ɵɵtemplate(28, TodosComponent_li_28_Template, 2, 0, \"li\", 15);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(23);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, _r2.control.touched && !_r2.control.valid))(\"ngModel\", ctx.model.task);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", _r2.control.hasError(\"required\"));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.DatePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["gql","Todo","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","t_r4","id","task","ɵɵpipeBind2","createdOn","TodosComponent","constructor","apollo","model","todos","subscribe","query","next","result","push","data","error","err","complete","onSubmit","submit","mutate","mutation","variables","todo","observer","console","log","form","reset","ɵɵdirectiveInject","i1","Apollo","selectors","viewQuery","TodosComponent_Query","rf","ctx","ɵɵtemplate","TodosComponent_tr_17_Template","ɵɵlistener","TodosComponent_Template_form_ngSubmit_18_listener","$event","TodosComponent_Template_input_ngModelChange_22_listener","TodosComponent_li_28_Template","ɵɵproperty","ɵɵpureFunction1","_c1","_r2","control","touched","valid","hasError"],"sources":["D:\\Repos\\learn-dotnet\\GraphQL_Angular_Subscriptions_V7_6_0\\TodoClient\\src\\app\\todos\\todos.component.ts","D:\\Repos\\learn-dotnet\\GraphQL_Angular_Subscriptions_V7_6_0\\TodoClient\\src\\app\\todos\\todos.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Apollo, gql, Subscription } from 'apollo-angular';\nimport { Todo } from 'src/models/todo.model';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss']\n})\nexport class TodosComponent {\n  public model: Todo = new Todo();\n  public todos: Todo[] = [];\n  @ViewChild('form', { static: false }) form?: NgForm;\n\n  constructor(private apollo: Apollo) {\n    this.apollo.subscribe({\n      query:gql`subscription todos {\n        todos {\n          id\n          task\n          createdOn\n        }\n      }`\n    }).subscribe({\n      next:(result:any)=>{\n        this.todos = [];\n          this.todos.push(result.data.todos);\n      },\n      error:(err)=>{\n\n      },\n      complete:()=>{\n\n      }\n    });\n\n    // this.apollo.query({\n    //   query: gql`query getTodos{\n    //     todos {\n    //       id\n    //       task\n    //       createdOn\n    //     }\n    //   }`\n    // }).subscribe((observer: any) => {\n    //   this.todos = observer.data.todos;\n    // });\n  }\n\n  onSubmit(submit: SubmitEvent) {\n    this.apollo.mutate({\n      mutation: gql`mutation saveTodo($todo:TodoInput!){\n        save(inp:$todo) {\n          id\n          task\n        }\n      }`,\n      variables: {\n        todo: {\n          id: this.model.id ?? 0,\n          task: this.model.task\n        }\n      }\n    }).subscribe(observer => {\n      console.log(observer)\n      console.log(observer.data)\n      this.model = new Todo();\n      this.form?.reset();\n    })\n  }\n\n}\n","<div class=\"card bg-dark h-100vh\">\n  <div class=\"card-body\">\n    <h4 class=\"card-title text-white\">Todos</h4>\n\n    <div class=\"table-responsive\">\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Task</th>\n            <th scope=\"col\">Created On</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr class=\"\" *ngFor=\"let t of todos\">\n            <td scope=\"row\">{{t.id}}</td>\n            <td>{{t.task}}</td>\n            <td>{{t.createdOn | date:'dd-MMM-YYYY'}}</td>\n            <td>\n\n            </td>\n          </tr>\n\n        </tbody>\n      </table>\n\n      <form class=\"d-flex\" #form=\"ngForm\" (ngSubmit)=\"onSubmit($event)\">\n        <div class=\"col\">\n          <div class=\"input-group has-validation mb-3 \">\n            <input name=\"task\" id=\"task\" [ngClass]=\"{'is-invalid':(taskInp.control.touched && !taskInp.control.valid)}\"\n              type=\"text\" class=\"form-control bg-dark text-white\" placeholder=\"Enter a task\" [(ngModel)]=\"model.task\" #taskInp=\"ngModel\"\n              required=\"true\" />\n            <button class=\"btn btn-outline-primary\" type=\"submit\" id=\"\">Save</button>\n            <div class=\"invalid-feedback\">\n              <ul>\n                <li *ngIf=\"taskInp.control.hasError('required')\"> This Field is Required</li>\n              </ul>\n            </div>\n          </div>\n\n        </div>\n      </form>\n    </div>\n\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}