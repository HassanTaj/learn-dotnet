{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { print } from '../../utilities/index.js';\n;\nvar defaultHttpOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n  preserveHeaderCase: false\n};\nvar defaultHeaders = {\n  accept: '*/*',\n  'content-type': 'application/json'\n};\nvar defaultOptions = {\n  method: 'POST'\n};\nexport var fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions\n};\nexport var defaultPrinter = function (ast, printer) {\n  return printer(ast);\n};\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n  var configs = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation, defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n  var configs = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n  var options = {};\n  var http = {};\n  configs.forEach(function (config) {\n    options = __assign(__assign(__assign({}, options), config.options), {\n      headers: __assign(__assign({}, options.headers), config.headers)\n    });\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n    http = __assign(__assign({}, http), config.http);\n  });\n  if (options.headers) {\n    options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n  }\n  var operationName = operation.operationName,\n    extensions = operation.extensions,\n    variables = operation.variables,\n    query = operation.query;\n  var body = {\n    operationName: operationName,\n    variables: variables\n  };\n  if (http.includeExtensions) body.extensions = extensions;\n  if (http.includeQuery) body.query = printer(query, print);\n  return {\n    options: options,\n    body: body\n  };\n}\n;\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n  if (!preserveHeaderCase) {\n    var normalizedHeaders_1 = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n      normalizedHeaders_1[name.toLowerCase()] = headers[name];\n    });\n    return normalizedHeaders_1;\n  }\n  var headerData = Object.create(null);\n  Object.keys(Object(headers)).forEach(function (name) {\n    headerData[name.toLowerCase()] = {\n      originalName: name,\n      value: headers[name]\n    };\n  });\n  var normalizedHeaders = Object.create(null);\n  Object.keys(headerData).forEach(function (name) {\n    normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n  });\n  return normalizedHeaders;\n}","map":{"version":3,"names":["__assign","__spreadArray","print","defaultHttpOptions","includeQuery","includeExtensions","preserveHeaderCase","defaultHeaders","accept","defaultOptions","method","fallbackHttpConfig","http","headers","options","defaultPrinter","ast","printer","selectHttpOptionsAndBody","operation","fallbackConfig","configs","_i","arguments","length","unshift","selectHttpOptionsAndBodyInternal","apply","forEach","config","credentials","removeDuplicateHeaders","operationName","extensions","variables","query","body","normalizedHeaders_1","Object","create","keys","name","toLowerCase","headerData","originalName","value","normalizedHeaders"],"sources":["D:/Repos/learn-dotnet/GraphQL_Angular_Subscriptions_V7_6_0/TodoClient/node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js"],"sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport { print } from '../../utilities/index.js';\n;\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n    preserveHeaderCase: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var defaultPrinter = function (ast, printer) { return printer(ast); };\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    configs.unshift(fallbackConfig);\n    return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation,\n        defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = {};\n    var http = {};\n    configs.forEach(function (config) {\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), config.headers) });\n        if (config.credentials) {\n            options.credentials = config.credentials;\n        }\n        http = __assign(__assign({}, http), config.http);\n    });\n    if (options.headers) {\n        options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n    }\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = printer(query, print);\n    return {\n        options: options,\n        body: body,\n    };\n}\n;\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n    if (!preserveHeaderCase) {\n        var normalizedHeaders_1 = Object.create(null);\n        Object.keys(Object(headers)).forEach(function (name) {\n            normalizedHeaders_1[name.toLowerCase()] = headers[name];\n        });\n        return normalizedHeaders_1;\n    }\n    var headerData = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n        headerData[name.toLowerCase()] = { originalName: name, value: headers[name] };\n    });\n    var normalizedHeaders = Object.create(null);\n    Object.keys(headerData).forEach(function (name) {\n        normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n    });\n    return normalizedHeaders;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}