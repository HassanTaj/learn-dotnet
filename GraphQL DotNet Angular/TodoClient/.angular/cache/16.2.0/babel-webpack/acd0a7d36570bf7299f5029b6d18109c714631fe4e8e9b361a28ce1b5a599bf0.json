{"ast":null,"code":"var _class;\nimport { APOLLO_OPTIONS, ApolloModule } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { InMemoryCache } from '@apollo/client/core';\nimport { GraphQLWsLink } from \"@apollo/client/link/subscriptions\";\nimport { createClient } from \"graphql-ws\";\nimport * as i0 from \"@angular/core\";\nconst uri = 'https://localhost:44354/todos/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink) {\n  // Create an http link:\n  const http = httpLink.create({\n    uri: 'http://localhost:4000/graphql'\n  });\n  // Create a WebSocket link:\n  const ws = new GraphQLWsLink(createClient({\n    url: \"ws://localhost:4000/graphql\"\n  }));\n  return {\n    link: httpLink.create({\n      uri\n    }),\n    cache: new InMemoryCache()\n  };\n}\nexport class GraphQLModule {}\n_class = GraphQLModule;\n_class.ɵfac = function GraphQLModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: APOLLO_OPTIONS,\n    useFactory: createApollo,\n    deps: [HttpLink]\n  }],\n  imports: [ApolloModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(GraphQLModule, {\n    exports: [ApolloModule]\n  });\n})();","map":{"version":3,"names":["APOLLO_OPTIONS","ApolloModule","HttpLink","InMemoryCache","GraphQLWsLink","createClient","uri","createApollo","httpLink","http","create","ws","url","link","cache","GraphQLModule","provide","useFactory","deps","imports","exports"],"sources":["D:\\Repos\\learn-dotnet\\GraphQL_Angular_Subscriptions_V7_6_0\\TodoClient\\src\\app\\graphql.module.ts"],"sourcesContent":["import { APOLLO_OPTIONS, ApolloModule } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { NgModule } from '@angular/core';\nimport { ApolloClientOptions, InMemoryCache } from '@apollo/client/core';\nimport { GraphQLWsLink } from \"@apollo/client/link/subscriptions\";\nimport { createClient } from \"graphql-ws\";\n\nconst uri = 'https://localhost:44354/todos/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n\n\n   // Create an http link:\n   const http = httpLink.create({\n    uri: 'http://localhost:4000/graphql',\n  });\n\n  // Create a WebSocket link:\n  const ws = new GraphQLWsLink(\n    createClient({\n      url: \"ws://localhost:4000/graphql\",\n    }),\n  );\n  return {\n    link: httpLink.create({ uri }),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,YAAY,QAAQ,gBAAgB;AAC7D,SAASC,QAAQ,QAAQ,qBAAqB;AAE9C,SAA8BC,aAAa,QAAQ,qBAAqB;AACxE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,YAAY,QAAQ,YAAY;;AAEzC,MAAMC,GAAG,GAAG,uCAAuC,CAAC,CAAC;AACrD,OAAM,SAAUC,YAAYA,CAACC,QAAkB;EAG5C;EACA,MAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAM,CAAC;IAC5BJ,GAAG,EAAE;GACN,CAAC;EAEF;EACA,MAAMK,EAAE,GAAG,IAAIP,aAAa,CAC1BC,YAAY,CAAC;IACXO,GAAG,EAAE;GACN,CAAC,CACH;EACD,OAAO;IACLC,IAAI,EAAEL,QAAQ,CAACE,MAAM,CAAC;MAAEJ;IAAG,CAAE,CAAC;IAC9BQ,KAAK,EAAE,IAAIX,aAAa;GACzB;AACH;AAYA,OAAM,MAAOY,aAAa;SAAbA,aAAa;;mBAAbA,MAAa;AAAA;;QAAbA;AAAa;;aARb,CACT;IACEC,OAAO,EAAEhB,cAAc;IACvBiB,UAAU,EAAEV,YAAY;IACxBW,IAAI,EAAE,CAAChB,QAAQ;GAChB,CACF;EAAAiB,OAAA,GAPSlB,YAAY;AAAA;;2EASXc,aAAa;IAAAK,OAAA,GATdnB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}