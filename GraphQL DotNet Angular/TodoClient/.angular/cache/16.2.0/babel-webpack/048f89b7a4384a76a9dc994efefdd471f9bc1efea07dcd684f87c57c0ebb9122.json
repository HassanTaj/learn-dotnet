{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { print } from '../../utilities/index.js';\nimport { ApolloLink } from \"../core/index.js\";\nimport { isNonNullObject, Observable } from \"../../utilities/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nfunction isLikeCloseEvent(val) {\n  return isNonNullObject(val) && \"code\" in val && \"reason\" in val;\n}\nfunction isLikeErrorEvent(err) {\n  var _a;\n  return isNonNullObject(err) && ((_a = err.target) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.CLOSED;\n}\nvar GraphQLWsLink = function (_super) {\n  __extends(GraphQLWsLink, _super);\n  function GraphQLWsLink(client) {\n    var _this = _super.call(this) || this;\n    _this.client = client;\n    return _this;\n  }\n  GraphQLWsLink.prototype.request = function (operation) {\n    var _this = this;\n    return new Observable(function (observer) {\n      return _this.client.subscribe(__assign(__assign({}, operation), {\n        query: print(operation.query)\n      }), {\n        next: observer.next.bind(observer),\n        complete: observer.complete.bind(observer),\n        error: function (err) {\n          if (err instanceof Error) {\n            return observer.error(err);\n          }\n          var likeClose = isLikeCloseEvent(err);\n          if (likeClose || isLikeErrorEvent(err)) {\n            return observer.error(new Error(\"Socket closed\".concat(likeClose ? \" with event \".concat(err.code) : \"\").concat(likeClose ? \" \".concat(err.reason) : \"\")));\n          }\n          return observer.error(new ApolloError({\n            graphQLErrors: Array.isArray(err) ? err : [err]\n          }));\n        }\n      });\n    });\n  };\n  return GraphQLWsLink;\n}(ApolloLink);\nexport { GraphQLWsLink };","map":{"version":3,"names":["__assign","__extends","print","ApolloLink","isNonNullObject","Observable","ApolloError","isLikeCloseEvent","val","isLikeErrorEvent","err","_a","target","readyState","WebSocket","CLOSED","GraphQLWsLink","_super","client","_this","call","prototype","request","operation","observer","subscribe","query","next","bind","complete","error","Error","likeClose","concat","code","reason","graphQLErrors","Array","isArray"],"sources":["D:/Repos/learn-dotnet/GraphQL_Angular_Subscriptions_V7_6_0/TodoClient/node_modules/@apollo/client/link/subscriptions/index.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { print } from '../../utilities/index.js';\nimport { ApolloLink } from \"../core/index.js\";\nimport { isNonNullObject, Observable } from \"../../utilities/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nfunction isLikeCloseEvent(val) {\n    return isNonNullObject(val) && \"code\" in val && \"reason\" in val;\n}\nfunction isLikeErrorEvent(err) {\n    var _a;\n    return isNonNullObject(err) && ((_a = err.target) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.CLOSED;\n}\nvar GraphQLWsLink = (function (_super) {\n    __extends(GraphQLWsLink, _super);\n    function GraphQLWsLink(client) {\n        var _this = _super.call(this) || this;\n        _this.client = client;\n        return _this;\n    }\n    GraphQLWsLink.prototype.request = function (operation) {\n        var _this = this;\n        return new Observable(function (observer) {\n            return _this.client.subscribe(__assign(__assign({}, operation), { query: print(operation.query) }), {\n                next: observer.next.bind(observer),\n                complete: observer.complete.bind(observer),\n                error: function (err) {\n                    if (err instanceof Error) {\n                        return observer.error(err);\n                    }\n                    var likeClose = isLikeCloseEvent(err);\n                    if (likeClose || isLikeErrorEvent(err)) {\n                        return observer.error(new Error(\"Socket closed\".concat(likeClose ? \" with event \".concat(err.code) : \"\").concat(likeClose ? \" \".concat(err.reason) : \"\")));\n                    }\n                    return observer.error(new ApolloError({\n                        graphQLErrors: Array.isArray(err) ? err : [err],\n                    }));\n                },\n            });\n        });\n    };\n    return GraphQLWsLink;\n}(ApolloLink));\nexport { GraphQLWsLink };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,eAAe,EAAEC,UAAU,QAAQ,0BAA0B;AACtE,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,gBAAgBA,CAACC,GAAG,EAAE;EAC3B,OAAOJ,eAAe,CAACI,GAAG,CAAC,IAAI,MAAM,IAAIA,GAAG,IAAI,QAAQ,IAAIA,GAAG;AACnE;AACA,SAASC,gBAAgBA,CAACC,GAAG,EAAE;EAC3B,IAAIC,EAAE;EACN,OAAOP,eAAe,CAACM,GAAG,CAAC,IAAI,CAAC,CAACC,EAAE,GAAGD,GAAG,CAACE,MAAM,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,UAAU,MAAMC,SAAS,CAACC,MAAM;AAC9H;AACA,IAAIC,aAAa,GAAI,UAAUC,MAAM,EAAE;EACnChB,SAAS,CAACe,aAAa,EAAEC,MAAM,CAAC;EAChC,SAASD,aAAaA,CAACE,MAAM,EAAE;IAC3B,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACD,MAAM,GAAGA,MAAM;IACrB,OAAOC,KAAK;EAChB;EACAH,aAAa,CAACK,SAAS,CAACC,OAAO,GAAG,UAAUC,SAAS,EAAE;IACnD,IAAIJ,KAAK,GAAG,IAAI;IAChB,OAAO,IAAId,UAAU,CAAC,UAAUmB,QAAQ,EAAE;MACtC,OAAOL,KAAK,CAACD,MAAM,CAACO,SAAS,CAACzB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEuB,SAAS,CAAC,EAAE;QAAEG,KAAK,EAAExB,KAAK,CAACqB,SAAS,CAACG,KAAK;MAAE,CAAC,CAAC,EAAE;QAChGC,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACJ,QAAQ,CAAC;QAClCK,QAAQ,EAAEL,QAAQ,CAACK,QAAQ,CAACD,IAAI,CAACJ,QAAQ,CAAC;QAC1CM,KAAK,EAAE,SAAAA,CAAUpB,GAAG,EAAE;UAClB,IAAIA,GAAG,YAAYqB,KAAK,EAAE;YACtB,OAAOP,QAAQ,CAACM,KAAK,CAACpB,GAAG,CAAC;UAC9B;UACA,IAAIsB,SAAS,GAAGzB,gBAAgB,CAACG,GAAG,CAAC;UACrC,IAAIsB,SAAS,IAAIvB,gBAAgB,CAACC,GAAG,CAAC,EAAE;YACpC,OAAOc,QAAQ,CAACM,KAAK,CAAC,IAAIC,KAAK,CAAC,eAAe,CAACE,MAAM,CAACD,SAAS,GAAG,cAAc,CAACC,MAAM,CAACvB,GAAG,CAACwB,IAAI,CAAC,GAAG,EAAE,CAAC,CAACD,MAAM,CAACD,SAAS,GAAG,GAAG,CAACC,MAAM,CAACvB,GAAG,CAACyB,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UAC9J;UACA,OAAOX,QAAQ,CAACM,KAAK,CAAC,IAAIxB,WAAW,CAAC;YAClC8B,aAAa,EAAEC,KAAK,CAACC,OAAO,CAAC5B,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG;UAClD,CAAC,CAAC,CAAC;QACP;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,OAAOM,aAAa;AACxB,CAAC,CAACb,UAAU,CAAE;AACd,SAASa,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}