{"ast":null,"code":"import { newInvariantError } from '../globals/index.js';\nimport { isNonNullObject } from '../common/objects.js';\nimport { getFragmentFromSelection } from './fragments.js';\nexport function makeReference(id) {\n  return {\n    __ref: String(id)\n  };\n}\nexport function isReference(obj) {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\nexport function isDocumentNode(value) {\n  return isNonNullObject(value) && value.kind === \"Document\" && Array.isArray(value.definitions);\n}\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw newInvariantError(79, name.value, value.kind);\n  }\n}\nexport function storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n            value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n  var argObj = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export', 'nonreactive'];\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n  if (args && directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = args[key];\n      });\n      return \"\".concat(directives['connection']['key'], \"(\").concat(stringify(filteredArgs_1), \")\");\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n  var completeFieldName = fieldName;\n  if (args) {\n    var stringifiedArgs = stringify(args);\n    completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n  }\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\".concat(key, \"(\").concat(stringify(directives[key]), \")\");\n      } else {\n        completeFieldName += \"@\".concat(key);\n      }\n    });\n  }\n  return completeFieldName;\n}, {\n  setStringify: function (s) {\n    var previous = stringify;\n    stringify = s;\n    return previous;\n  }\n});\nvar stringify = function defaultStringify(value) {\n  return JSON.stringify(value, stringifyReplacer);\n};\nfunction stringifyReplacer(_key, value) {\n  if (isNonNullObject(value) && !Array.isArray(value)) {\n    value = Object.keys(value).sort().reduce(function (copy, key) {\n      copy[key] = value[key];\n      return copy;\n    }, {});\n  }\n  return value;\n}\nexport function argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n  return null;\n}\nexport function resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n  var fragments;\n  for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n    var selection = _a[_i];\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else if (fragments) {\n      fragments.push(selection);\n    } else {\n      fragments = [selection];\n    }\n  }\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n  if (fragments) {\n    for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n      var selection = fragments_1[_b];\n      var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\nexport function isField(selection) {\n  return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}","map":{"version":3,"names":["newInvariantError","isNonNullObject","getFragmentFromSelection","makeReference","id","__ref","String","isReference","obj","Boolean","isDocumentNode","value","kind","Array","isArray","definitions","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","name","variables","Number","nestedArgObj_1","fields","map","variableValue","values","listValue","nestedArgArrayObj","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","_a","length","getStoreKeyName","KNOWN_DIRECTIVES","Object","assign","fieldName","args","filterKeys","sort","filteredArgs_1","key","concat","stringify","completeFieldName","stringifiedArgs","keys","indexOf","setStringify","s","previous","defaultStringify","JSON","stringifyReplacer","_key","reduce","copy","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","getTypenameFromResult","result","selectionSet","fragmentMap","fragments","_i","selections","selection","isField","push","__typename","_b","fragments_1","typename","isInlineFragment"],"sources":["D:/Repos/learn-dotnet/GraphQL_Angular_Subscriptions_V7_6_0/TodoClient/node_modules/@apollo/client/utilities/graphql/storeUtils.js"],"sourcesContent":["import { newInvariantError } from '../globals/index.js';\nimport { isNonNullObject } from '../common/objects.js';\nimport { getFragmentFromSelection } from './fragments.js';\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\nexport function isDocumentNode(value) {\n    return (isNonNullObject(value) &&\n        value.kind === \"Document\" &&\n        Array.isArray(value.definitions));\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw newInvariantError(79, name.value, value.kind);\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n    'nonreactive',\n];\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives['connection']['key'], \"(\").concat(stringify(filteredArgs_1), \")\");\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(stringify(directives[key]), \")\");\n            }\n            else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function (s) {\n        var previous = stringify;\n        stringify = s;\n        return previous;\n    },\n});\nvar stringify = function defaultStringify(value) {\n    return JSON.stringify(value, stringifyReplacer);\n};\nfunction stringifyReplacer(_key, value) {\n    if (isNonNullObject(value) && !Array.isArray(value)) {\n        value = Object.keys(value).sort().reduce(function (copy, key) {\n            copy[key] = value[key];\n            return copy;\n        }, {});\n    }\n    return value;\n}\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    var fragments;\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === '__typename') {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else if (fragments) {\n            fragments.push(selection);\n        }\n        else {\n            fragments = [selection];\n        }\n    }\n    if (typeof result.__typename === 'string') {\n        return result.__typename;\n    }\n    if (fragments) {\n        for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n            var selection = fragments_1[_b];\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === 'string') {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}