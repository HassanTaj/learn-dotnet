{"ast":null,"code":"// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n// Useful for processing arguments objects as well as arrays.\nconst {\n  forEach,\n  slice\n} = Array.prototype;\nconst {\n  hasOwnProperty\n} = Object.prototype;\nexport class Trie {\n  constructor(weakness = true, makeData = defaultMakeData) {\n    this.weakness = weakness;\n    this.makeData = makeData;\n  }\n  lookup(...array) {\n    return this.lookupArray(array);\n  }\n  lookupArray(array) {\n    let node = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return hasOwnProperty.call(node, \"data\") ? node.data : node.data = this.makeData(slice.call(array));\n  }\n  peek(...array) {\n    return this.peekArray(array);\n  }\n  peekArray(array) {\n    let node = this;\n    for (let i = 0, len = array.length; node && i < len; ++i) {\n      const map = this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n      node = map && map.get(array[i]);\n    }\n    return node && node.data;\n  }\n  getChildTrie(key) {\n    const map = this.weakness && isObjRef(key) ? this.weak || (this.weak = new WeakMap()) : this.strong || (this.strong = new Map());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie(this.weakness, this.makeData));\n    return child;\n  }\n}\nfunction isObjRef(value) {\n  switch (typeof value) {\n    case \"object\":\n      if (value === null) break;\n    // Fall through to return true...\n    case \"function\":\n      return true;\n  }\n  return false;\n}","map":{"version":3,"names":["defaultMakeData","Object","create","forEach","slice","Array","prototype","hasOwnProperty","Trie","constructor","weakness","makeData","lookup","array","lookupArray","node","call","key","getChildTrie","data","peek","peekArray","i","len","length","map","isObjRef","weak","strong","get","WeakMap","Map","child","set","value"],"sources":["D:/Repos/learn-dotnet/GraphQL_Angular_Subscriptions_V7_6_0/TodoClient/node_modules/@wry/trie/lib/index.js"],"sourcesContent":["// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\nexport class Trie {\n    constructor(weakness = true, makeData = defaultMakeData) {\n        this.weakness = weakness;\n        this.makeData = makeData;\n    }\n    lookup(...array) {\n        return this.lookupArray(array);\n    }\n    lookupArray(array) {\n        let node = this;\n        forEach.call(array, key => node = node.getChildTrie(key));\n        return hasOwnProperty.call(node, \"data\")\n            ? node.data\n            : node.data = this.makeData(slice.call(array));\n    }\n    peek(...array) {\n        return this.peekArray(array);\n    }\n    peekArray(array) {\n        let node = this;\n        for (let i = 0, len = array.length; node && i < len; ++i) {\n            const map = this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n            node = map && map.get(array[i]);\n        }\n        return node && node.data;\n    }\n    getChildTrie(key) {\n        const map = this.weakness && isObjRef(key)\n            ? this.weak || (this.weak = new WeakMap())\n            : this.strong || (this.strong = new Map());\n        let child = map.get(key);\n        if (!child)\n            map.set(key, child = new Trie(this.weakness, this.makeData));\n        return child;\n    }\n}\nfunction isObjRef(value) {\n    switch (typeof value) {\n        case \"object\":\n            if (value === null)\n                break;\n        // Fall through to return true...\n        case \"function\":\n            return true;\n    }\n    return false;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAGA,CAAA,KAAMC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;AACjD;AACA,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,GAAGC,KAAK,CAACC,SAAS;AAC1C,MAAM;EAAEC;AAAe,CAAC,GAAGN,MAAM,CAACK,SAAS;AAC3C,OAAO,MAAME,IAAI,CAAC;EACdC,WAAWA,CAACC,QAAQ,GAAG,IAAI,EAAEC,QAAQ,GAAGX,eAAe,EAAE;IACrD,IAAI,CAACU,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACAC,MAAMA,CAAC,GAAGC,KAAK,EAAE;IACb,OAAO,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;EAClC;EACAC,WAAWA,CAACD,KAAK,EAAE;IACf,IAAIE,IAAI,GAAG,IAAI;IACfZ,OAAO,CAACa,IAAI,CAACH,KAAK,EAAEI,GAAG,IAAIF,IAAI,GAAGA,IAAI,CAACG,YAAY,CAACD,GAAG,CAAC,CAAC;IACzD,OAAOV,cAAc,CAACS,IAAI,CAACD,IAAI,EAAE,MAAM,CAAC,GAClCA,IAAI,CAACI,IAAI,GACTJ,IAAI,CAACI,IAAI,GAAG,IAAI,CAACR,QAAQ,CAACP,KAAK,CAACY,IAAI,CAACH,KAAK,CAAC,CAAC;EACtD;EACAO,IAAIA,CAAC,GAAGP,KAAK,EAAE;IACX,OAAO,IAAI,CAACQ,SAAS,CAACR,KAAK,CAAC;EAChC;EACAQ,SAASA,CAACR,KAAK,EAAE;IACb,IAAIE,IAAI,GAAG,IAAI;IACf,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGV,KAAK,CAACW,MAAM,EAAET,IAAI,IAAIO,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;MACtD,MAAMG,GAAG,GAAG,IAAI,CAACf,QAAQ,IAAIgB,QAAQ,CAACb,KAAK,CAACS,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACY,IAAI,GAAGZ,IAAI,CAACa,MAAM;MACzEb,IAAI,GAAGU,GAAG,IAAIA,GAAG,CAACI,GAAG,CAAChB,KAAK,CAACS,CAAC,CAAC,CAAC;IACnC;IACA,OAAOP,IAAI,IAAIA,IAAI,CAACI,IAAI;EAC5B;EACAD,YAAYA,CAACD,GAAG,EAAE;IACd,MAAMQ,GAAG,GAAG,IAAI,CAACf,QAAQ,IAAIgB,QAAQ,CAACT,GAAG,CAAC,GACpC,IAAI,CAACU,IAAI,KAAK,IAAI,CAACA,IAAI,GAAG,IAAIG,OAAO,CAAC,CAAC,CAAC,GACxC,IAAI,CAACF,MAAM,KAAK,IAAI,CAACA,MAAM,GAAG,IAAIG,GAAG,CAAC,CAAC,CAAC;IAC9C,IAAIC,KAAK,GAAGP,GAAG,CAACI,GAAG,CAACZ,GAAG,CAAC;IACxB,IAAI,CAACe,KAAK,EACNP,GAAG,CAACQ,GAAG,CAAChB,GAAG,EAAEe,KAAK,GAAG,IAAIxB,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC;IAChE,OAAOqB,KAAK;EAChB;AACJ;AACA,SAASN,QAAQA,CAACQ,KAAK,EAAE;EACrB,QAAQ,OAAOA,KAAK;IAChB,KAAK,QAAQ;MACT,IAAIA,KAAK,KAAK,IAAI,EACd;IACR;IACA,KAAK,UAAU;MACX,OAAO,IAAI;EACnB;EACA,OAAO,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}