{"ast":null,"code":"import { Observable } from \"./Observable.js\";\nexport function asyncMap(observable, mapFn, catchFn) {\n  return new Observable(function (observer) {\n    var next = observer.next,\n      error = observer.error,\n      complete = observer.complete;\n    var activeCallbackCount = 0;\n    var completed = false;\n    var promiseQueue = {\n      then: function (callback) {\n        return new Promise(function (resolve) {\n          return resolve(callback());\n        });\n      }\n    };\n    function makeCallback(examiner, delegate) {\n      if (examiner) {\n        return function (arg) {\n          ++activeCallbackCount;\n          var both = function () {\n            return examiner(arg);\n          };\n          promiseQueue = promiseQueue.then(both, both).then(function (result) {\n            --activeCallbackCount;\n            next && next.call(observer, result);\n            if (completed) {\n              handler.complete();\n            }\n          }, function (error) {\n            --activeCallbackCount;\n            throw error;\n          }).catch(function (caught) {\n            error && error.call(observer, caught);\n          });\n        };\n      } else {\n        return function (arg) {\n          return delegate && delegate.call(observer, arg);\n        };\n      }\n    }\n    var handler = {\n      next: makeCallback(mapFn, next),\n      error: makeCallback(catchFn, error),\n      complete: function () {\n        completed = true;\n        if (!activeCallbackCount) {\n          complete && complete.call(observer);\n        }\n      }\n    };\n    var sub = observable.subscribe(handler);\n    return function () {\n      return sub.unsubscribe();\n    };\n  });\n}","map":{"version":3,"names":["Observable","asyncMap","observable","mapFn","catchFn","observer","next","error","complete","activeCallbackCount","completed","promiseQueue","then","callback","Promise","resolve","makeCallback","examiner","delegate","arg","both","result","call","handler","catch","caught","sub","subscribe","unsubscribe"],"sources":["D:/Repos/learn-dotnet/GraphQL_Angular_Subscriptions_V7_6_0/TodoClient/node_modules/@apollo/client/utilities/observables/asyncMap.js"],"sourcesContent":["import { Observable } from \"./Observable.js\";\nexport function asyncMap(observable, mapFn, catchFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeCallbackCount = 0;\n        var completed = false;\n        var promiseQueue = {\n            then: function (callback) {\n                return new Promise(function (resolve) { return resolve(callback()); });\n            },\n        };\n        function makeCallback(examiner, delegate) {\n            if (examiner) {\n                return function (arg) {\n                    ++activeCallbackCount;\n                    var both = function () { return examiner(arg); };\n                    promiseQueue = promiseQueue.then(both, both).then(function (result) {\n                        --activeCallbackCount;\n                        next && next.call(observer, result);\n                        if (completed) {\n                            handler.complete();\n                        }\n                    }, function (error) {\n                        --activeCallbackCount;\n                        throw error;\n                    }).catch(function (caught) {\n                        error && error.call(observer, caught);\n                    });\n                };\n            }\n            else {\n                return function (arg) { return delegate && delegate.call(observer, arg); };\n            }\n        }\n        var handler = {\n            next: makeCallback(mapFn, next),\n            error: makeCallback(catchFn, error),\n            complete: function () {\n                completed = true;\n                if (!activeCallbackCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,OAAO,SAASC,QAAQA,CAACC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAE;EACjD,OAAO,IAAIJ,UAAU,CAAC,UAAUK,QAAQ,EAAE;IACtC,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAAEC,KAAK,GAAGF,QAAQ,CAACE,KAAK;MAAEC,QAAQ,GAAGH,QAAQ,CAACG,QAAQ;IAC9E,IAAIC,mBAAmB,GAAG,CAAC;IAC3B,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIC,YAAY,GAAG;MACfC,IAAI,EAAE,SAAAA,CAAUC,QAAQ,EAAE;QACtB,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;UAAE,OAAOA,OAAO,CAACF,QAAQ,CAAC,CAAC,CAAC;QAAE,CAAC,CAAC;MAC1E;IACJ,CAAC;IACD,SAASG,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;MACtC,IAAID,QAAQ,EAAE;QACV,OAAO,UAAUE,GAAG,EAAE;UAClB,EAAEV,mBAAmB;UACrB,IAAIW,IAAI,GAAG,SAAAA,CAAA,EAAY;YAAE,OAAOH,QAAQ,CAACE,GAAG,CAAC;UAAE,CAAC;UAChDR,YAAY,GAAGA,YAAY,CAACC,IAAI,CAACQ,IAAI,EAAEA,IAAI,CAAC,CAACR,IAAI,CAAC,UAAUS,MAAM,EAAE;YAChE,EAAEZ,mBAAmB;YACrBH,IAAI,IAAIA,IAAI,CAACgB,IAAI,CAACjB,QAAQ,EAAEgB,MAAM,CAAC;YACnC,IAAIX,SAAS,EAAE;cACXa,OAAO,CAACf,QAAQ,CAAC,CAAC;YACtB;UACJ,CAAC,EAAE,UAAUD,KAAK,EAAE;YAChB,EAAEE,mBAAmB;YACrB,MAAMF,KAAK;UACf,CAAC,CAAC,CAACiB,KAAK,CAAC,UAAUC,MAAM,EAAE;YACvBlB,KAAK,IAAIA,KAAK,CAACe,IAAI,CAACjB,QAAQ,EAAEoB,MAAM,CAAC;UACzC,CAAC,CAAC;QACN,CAAC;MACL,CAAC,MACI;QACD,OAAO,UAAUN,GAAG,EAAE;UAAE,OAAOD,QAAQ,IAAIA,QAAQ,CAACI,IAAI,CAACjB,QAAQ,EAAEc,GAAG,CAAC;QAAE,CAAC;MAC9E;IACJ;IACA,IAAII,OAAO,GAAG;MACVjB,IAAI,EAAEU,YAAY,CAACb,KAAK,EAAEG,IAAI,CAAC;MAC/BC,KAAK,EAAES,YAAY,CAACZ,OAAO,EAAEG,KAAK,CAAC;MACnCC,QAAQ,EAAE,SAAAA,CAAA,EAAY;QAClBE,SAAS,GAAG,IAAI;QAChB,IAAI,CAACD,mBAAmB,EAAE;UACtBD,QAAQ,IAAIA,QAAQ,CAACc,IAAI,CAACjB,QAAQ,CAAC;QACvC;MACJ;IACJ,CAAC;IACD,IAAIqB,GAAG,GAAGxB,UAAU,CAACyB,SAAS,CAACJ,OAAO,CAAC;IACvC,OAAO,YAAY;MAAE,OAAOG,GAAG,CAACE,WAAW,CAAC,CAAC;IAAE,CAAC;EACpD,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}